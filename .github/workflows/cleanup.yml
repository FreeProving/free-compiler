name: Cleanup

# The cleanup workflow is executed whenever a branch is deleted.
# The main purpose of this workflow is to stop deployments that were
# started by the `ci-pipeline` workflow.
on: [delete]

jobs:
  # This job removes the Haddock documentation deployed by the `deploy-docs`
  # job of the `ci-pipeline` workflow.
  #
  # This job requires a SSH deploy key for the repository. The following
  # command can be used to generate such a key.
  #
  #     ssh-keygen -t rsa -b 4096 -C "<email>" -N ""
  #
  #  - The **public key** must be given write access in the repositories deploy
  #    key menu under `Settings > Deploy Keys`.
  #
  #  - The **private key** must be added as a repository secret `DEPLOY_KEY` to
  #    the menu under `Settings > Secrets`.
  #
  # This job will be skipped if the `DEPLOY_KEY` secret is missing.
  # Therefore, it is not necessary to setup deployment to GitHub pages
  # when forking the repository.
  #
  # **NEVER** commit the contents of the private key!
  undeploy-docs:
    name: Remove deployed Haddock documentation
    runs-on: ubuntu-latest
    env:
      # We cannot access `secrets` in `jobs.<job_id>.steps.if` directly and
      # `env` is not allowed on `jobs.<job_id>.if`.
      HAS_DEPLOY_KEY: ${{ secrets.DEPLOY_KEY != '' }}
      # The `GITHUB_REF` is the master branch in workflows that have been
      # triggered by a `delete` event (see
      # https://help.github.com/en/actions/reference/events-that-trigger-workflows#delete-event-delete)
      # We can get the name of the deleted branch from the event's payload
      # (see https://developer.github.com/v3/activity/events/types/#deleteevent).
      DELETED_BRANCH_REF: ${{ github.event.ref }}
    steps:
    - if: ${{ env.HAS_DEPLOY_KEY == 'true' }}
      name: Checkout
      uses: actions/checkout@v1
    - if:   ${{ env.HAS_DEPLOY_KEY == 'true' }}
      name: Install SSH Client
      uses: webfactory/ssh-agent@v0.2.0
      with:
        ssh-private-key: ${{ secrets.DEPLOY_KEY }}
    - if: ${{ env.HAS_DEPLOY_KEY == 'true' }}
      name: Slug name of deleted branch
      run: |
        ./.github/scripts/slug.sh "$DELETED_BRANCH_REF" \
                                  "DELETED_BRANCH_REF_SLUG"
    - if: ${{ env.HAS_DEPLOY_KEY == 'true' }}
      name: Create empty folder to "deploy"
      run: mkdir -p ./build/docs
    - if: ${{ env.HAS_DEPLOY_KEY == 'true' }}
      name: Print debugging message
      run: |
        echo "Branch '$DELETED_BRANCH_REF' was deleted."
        echo "Removing GitHub pages deployment for '$DELETED_BRANCH_REF_SLUG'."
    - if: ${{ env.HAS_DEPLOY_KEY == 'true' }}
      name: Undeploy from GitHub pages
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        SSH: true
        CLEAN: true
        BRANCH: gh-pages
        FOLDER: build/docs
        TARGET_FOLDER: docs/${{ env.DELETED_BRANCH_REF_SLUG }}
