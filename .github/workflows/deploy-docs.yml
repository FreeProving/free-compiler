name: Deploy Haddock Documentation

# The Haddock Documentation is built and deployed on every push to the master
# that modifies Cabal configuration or Haskell source files. It also runs when
# the workflow configuration changed itself.
on:
  push:
    branches:
    - 'master'
    paths:
    - 'cabal.project'
    - 'free-compiler.cabal'
    - 'src/**'
    - '.github/workflows/deploy-docs.yml'

jobs:
  # This is the same job for building the Haddock documentation that is
  # executed by the CI pipeline but there is no dependency on the job
  # `install-dependencies` since there is no such job in this workflow.
  build-docs:
    name: Build Haddock documentation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup Haskell
      uses: actions/setup-haskell@v1
      with:
        ghc-version: '8.6.5'
        cabal-version: '2.4'
    - name: Update Cabal Package List
      id: cabal-update
      run: |
        cabal new-update
        echo "::set-output name=cabal-hash::$(cat cabal.project free-compiler.cabal | sha256sum | awk '{ print $1 }')"
        echo "::set-output name=cabal-index-hash::$(cat ~/.cabal/packages/**/01-index.cache | sha256sum -b | awk '{ print $1 }')"
    - name: Cache ~/.cabal/packages
      uses: actions/cache@v1
      with:
        path: ~/.cabal/packages
        key: ${{ matrix.os }}-cabal-packages-${{ steps.cabal-update.outputs.cabal-hash }}-${{ steps.cabal-update.outputs.cabal-index-hash }}
        restore-keys: |
          ${{ matrix.os }}-cabal-packages-${{ steps.cabal-update.outputs.cabal-hash }}-
          ${{ matrix.os }}-cabal-packages-
    - name: Cache ~/.cabal/store
      uses: actions/cache@v1
      with:
        path: ~/.cabal/store
        key: ${{ matrix.os }}-cabal-store-${{ steps.cabal-update.outputs.cabal-hash }}-${{ steps.cabal-update.outputs.cabal-index-hash }}
        restore-keys: |
          ${{ matrix.os }}-cabal-store-${{ steps.cabal-update.outputs.cabal-hash }}-
          ${{ matrix.os }}-cabal-store-
    - name: Cache dist-newstyle
      uses: actions/cache@v1
      with:
        path: dist-newstyle
        key: ${{ matrix.os }}-dist-newstyle-${{ steps.cabal-update.outputs.cabal-hash }}-${{ steps.cabal-update.outputs.cabal-index-hash }}
        restore-keys: |
          ${{ matrix.os }}-dist-newstyle-${{ steps.cabal-update.outputs.cabal-hash }}-
          ${{ matrix.os }}-dist-newstyle-
    - name: Install dependencies
      run: |
        cabal new-build freec-unit-tests --only-dependencies
        cabal new-build freec --only-dependencies
    - name: Run Haddock
      run: ./tool/make-docs.sh
    - name: Copy documentation to build directory
      run: |
        mkdir -p ./build/docs
        cp -R $(find dist-newstyle -path "*doc/html/free-compiler")/. ./build/docs
    - name: Upload documentation
      uses: actions/upload-artifact@v1
      with:
        name: documentation
        path: ./build/docs

  # This job deploys the Haddock documentation generated by the `build-docs`
  # job to GitHub pages.
  #
  # This job requires a SSH deploy key for the repository. The following
  # command can be used to generate such a key.
  #
  #     ssh-keygen -t rsa -b 4096 -C "<email>" -N ""
  #
  #  - The **public key** must be given write access in the repositories deploy
  #    key menu under `Settings > Deploy Keys`.
  #
  #  - The **private key** must be added as a repository secret `DEPLOY_KEY` to
  #    the menu under `Settings > Secrets`.
  #
  # This job will be skipped if the `DEPLOY_KEY` secret is missing.
  # Therefore, it is not necessary to setup deployment to GitHub pages
  # when forking the repository.
  #
  # **NEVER** commit the contents of the private key!
  deploy-docs:
    name: Deploy Haddock documentation to GitHub pages
    needs: [build-docs]
    runs-on: ubuntu-latest
    env:
      # We cannot access `secrets` in `jobs.<job_id>.steps.if` directly and
      # `env` is not allowed on `jobs.<job_id>.if`.
      HAS_DEPLOY_KEY: ${{ secrets.DEPLOY_KEY != '' }}
    steps:
    - # The checkout is required by the deployment action below.
      name: Checkout
      uses: actions/checkout@v1
    - if:   ${{ env.HAS_DEPLOY_KEY == 'true' }}
      name: Install SSH Client
      uses: webfactory/ssh-agent@v0.2.0
      with:
        ssh-private-key: ${{ secrets.DEPLOY_KEY }}
    - if: ${{ env.HAS_DEPLOY_KEY == 'true' }}
      name: Slug branch name
      run: ./.github/scripts/slug.sh "$GITHUB_REF" "GITHUB_REF_SLUG"
    - if:   ${{ env.HAS_DEPLOY_KEY == 'true' }}
      name: Download documentation
      uses: actions/download-artifact@v1
      with:
        name: documentation
        path: ./build/docs
    - if:   ${{ env.HAS_DEPLOY_KEY == 'true' }}
      name: Deploy to GitHub pages
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        SSH: true
        CLEAN: true
        BRANCH: gh-pages
        FOLDER: build/docs
        TARGET_FOLDER: docs/${{ env.GITHUB_REF_SLUG }}
