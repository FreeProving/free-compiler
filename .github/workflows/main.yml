name: Haskell To Coq Compiler CI

on: [push]

jobs:
  install-dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup haskell
      uses: actions/setup-haskell@v1
    - name: Cache ~/.cabal/packages
      id: cache-cabal-packages
      uses: actions/cache@v1
      with:
        path: ~/.cabal/packages
        key: cabal-packages
    - name: Cache ~/.cabal/store
      id: cache-cabal-store
      uses: actions/cache@v1
      with:
        path: ~/.cabal/store
        key: cabal-store
    - name: Cache dist-newstyle
      id: cache-dist-newstyle
      uses: actions/cache@v1
      with:
        path: dist-newstyle
        key: dist-newstyle
    - name: Install dependencies
      if: steps.cache-cabal-packages.outputs.cache-hit != 'true' ||
          steps.cache-cabal-store.outputs.cache-hit != 'true' ||
          steps.cache-dist-newstyle.outputs.cache-hit != 'true'
      run: |
        cabal new-update
        cabal new-build unit-tests --only-dependencies
        cabal new-build haskell-to-coq-compiler --only-dependencies

  unit-tests:
    name: Unit tests
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup Haskell
      uses: actions/setup-haskell@v1
      with:
        ghc-version: '8.6.5'
        cabal-version: '2.4'
    - name: Cache ~/.cabal/packages
      id: cache-cabal-packages
      uses: actions/cache@v1
      with:
        path: ~/.cabal/packages
        key: cabal-packages
    - name: Cache ~/.cabal/store
      id: cache-cabal-store
      uses: actions/cache@v1
      with:
        path: ~/.cabal/store
        key: cabal-store
    - name: Cache dist-newstyle
      id: cache-dist-newstyle
      uses: actions/cache@v1
      with:
        path: dist-newstyle
        key: dist-newstyle
    - name: Install dependencies
      if: steps.cache-cabal-packages.outputs.cache-hit != 'true' ||
          steps.cache-cabal-store.outputs.cache-hit != 'true' ||
          steps.cache-dist-newstyle.outputs.cache-hit != 'true'
      run: |
        cabal new-update
        cabal new-build unit-tests --only-dependencies
        cabal new-build haskell-to-coq-compiler --only-dependencies
    - name: Build unit tests
      run: cabal new-build unit-tests
    - name: Run unit tests
      run: cabal new-run unit-tests

  build-compiler:
    name: Build compiler
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup Haskell
      uses: actions/setup-haskell@v1
      with:
        ghc-version: '8.6.5'
        cabal-version: '2.4'
    - name: Cache ~/.cabal/packages
      id: cache-cabal-packages
      uses: actions/cache@v1
      with:
        path: ~/.cabal/packages
        key: cabal-packages
    - name: Cache ~/.cabal/store
      id: cache-cabal-store
      uses: actions/cache@v1
      with:
        path: ~/.cabal/store
        key: cabal-store
    - name: Cache dist-newstyle
      id: cache-dist-newstyle
      uses: actions/cache@v1
      with:
        path: dist-newstyle
        key: dist-newstyle
    - name: Install dependencies
      if: steps.cache-cabal-packages.outputs.cache-hit != 'true' ||
          steps.cache-cabal-store.outputs.cache-hit != 'true' ||
          steps.cache-dist-newstyle.outputs.cache-hit != 'true'
      run: |
        cabal new-update
        cabal new-build unit-tests --only-dependencies
        cabal new-build haskell-to-coq-compiler --only-dependencies
    - name: Build compiler
      run: cabal new-build haskell-to-coq-compiler
    - name: Copy executable to build directory
      run: |
        mkdir -p ./build/bin
        cp $(find dist-newstyle -name haskell-to-coq-compiler -type f)\
           ./build/bin/haskell-to-coq-compiler
    - name: Upload executable
      uses: actions/upload-artifact@v1
      with:
        name: compiler
        path: ./build/bin/haskell-to-coq-compiler

  build-docs:
    name: Build Haddock documentation
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup Haskell
      uses: actions/setup-haskell@v1
      with:
        ghc-version: '8.6.5'
        cabal-cersion: '2.4'
    - name: Cache ~/.cabal/packages
      id: cache-cabal-packages
      uses: actions/cache@v1
      with:
        path: ~/.cabal/packages
        key: cabal-packages
    - name: Cache ~/.cabal/store
      id: cache-cabal-store
      uses: actions/cache@v1
      with:
        path: ~/.cabal/store
        key: cabal-store
    - name: Cache dist-newstyle
      id: cache-dist-newstyle
      uses: actions/cache@v1
      with:
        path: dist-newstyle
        key: dist-newstyle
    - name: Install dependencies
      if: steps.cache-cabal-packages.outputs.cache-hit != 'true' ||
          steps.cache-cabal-store.outputs.cache-hit != 'true' ||
          steps.cache-dist-newstyle.outputs.cache-hit != 'true'
      run: |
        cabal new-update
        cabal new-build unit-tests --only-dependencies
        cabal new-build haskell-to-coq-compiler --only-dependencies
    - name: Run Haddock
      run: cabal new-haddock --haddock-hyperlink-source
    - name: Copy documentation to build directory
      run: |
        mkdir -p ./build/docs
        cp -r $(dirname $(find dist-newstyle -name "index.html"))/. ./build/docs
    - name: Upload documentation
      uses: actions/upload-artifact@v1
      with:
        name: documentation
        path: ./build/docs

  build-base-library:
    name: Build Coq base library
    runs-on: ubuntu-latest
    container: coqorg/coq:8.8.2
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Fix file permissions
      run: sudo chown -R coq:coq .
    - name: Setup Coq
      run: echo "::add-path::/home/coq/.opam/$COMPILER/bin"
    - name: Build Coq base library
      run: ./tool/compile-coq.sh base
    - name: Copy compiled base library to build directory
      run: |
        mkdir -p ./build/base
        cp --parents $(find base -name "*.vo" -or -name "*.glob") ./build
    - name: Upload compiled base library
      uses: actions/upload-artifact@v1
      with:
        name: coq-base-library
        path: ./build/base

  test-examples:
    name: Test examples
    needs: [build-compiler, build-base-library]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Download compiler
      uses: actions/download-artifact@v1
      with:
        name: compiler
        path: ./
    - name: Download base library
      uses: actions/download-artifact@v1
      with:
        name: coq-base-library
        path: ./base
    - name: Compile examples
      run: |
        ./haskell-to-coq-compiler                        \
          --transform-pattern-matching                   \
          --dump-transformed-modules example/transformed \
          -b ./base                                      \
          -o ./example/generated                         \
          $(find ./example -name "*.hs")
    - name: Copy compiled examples to build directory
      run:
        mkdir -p ./build/examples
        cp -r ./example/generated ./build/examples
        cp -r ./example/transformed ./build/examples
    - name: Upload compiled examples
      uses: actions/download-artifact@v1
      with:
        name: examples
        path: ./build/example

  test-generated-code:
    name: Test generated Coq code
    needs: [test-examples]
    runs-on: ubuntu-latest
    container: coqorg/coq:8.8.2
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Download base library
      uses: actions/download-artifact@v1
      with:
        name: coq-base-library
        path: ./base
    - name: Download compiled examples
      uses: actions/download-artifact@v1
      with:
        name: examples
        path: ./example
    - name: Compile (generated) Coq code
      run: ./tool/compile-coq.sh ./example
