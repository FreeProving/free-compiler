#!/bin/bash

# This script can be used as an alternative to `cabal new-repl`.
# In contrast to the `cabal new-repl` command, all modules from the
# `freec`, `freec-internal` and `freec-unit-tests` components are loaded
# in interpreted mode. This allows break points to be set across component
# boundaries.

# Change into the the compiler's root directory.
script=$(realpath "$0")
script_dir=$(dirname "$script")
root_dir=$(dirname "$script_dir")
cd "$root_dir"

# Build dependencies such that the GHC environment file is created or updated.
cabal new-build --only-dependencies freec

# Make the `Paths_free_compiler` module that is generated by Cabal available
# to GHCi by copying it to a temporary directory.
temp_dir=$(mktemp -d)
paths_module=$(find dist-newstyle -name "Paths_free_compiler.hs" | head -n 1)
cp "$paths_module" "$temp_dir"

# Create GHCi setup script that loads all modules from the `src` directory
# and makes `Main` the modules that is loaded by default.
ghci_script="$temp_dir/.ghci"
hs_files=$(find src -name "*.hs" | awk -v'' RS= -v OFS=' ' '{$1 = $1} 1')
echo ":add $hs_files" > "$ghci_script"
echo ":m" >> "$ghci_script"
echo ":m Main" >> "$ghci_script"

# Set environment variable to overwrite the Cabal data directory.
export free_compiler_datadir=$(pwd)

# Start GHCi.
cabal exec ghci -- -i"$temp_dir" -ghci-script"$ghci_script"

# Clean up.
rm -r "$temp_dir"
