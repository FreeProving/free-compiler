# This configuration file contains the names of predefined types and operators
# from the QuickCheck extension of the Free Compiler which allows for the
# generation of Coq `Prop`erties from QuickCheck properties that have been
# defined in the translated Haskell module.

##############################################################################
# Metadata                                                                   #
##############################################################################

version = 3
module-name = 'Test.QuickCheck'
library-name = 'Base'
exported-types = [
    'Test.QuickCheck.Property'
  ]
exported-values = [
    'Test.QuickCheck.property',
    'Test.QuickCheck.(==>)',
    'Test.QuickCheck.(===)',
    'Test.QuickCheck.(=/=)',
    'Test.QuickCheck.(.&&.)',
    'Test.QuickCheck.(.||.)',
  ]

##############################################################################
# Types                                                                      #
##############################################################################

[[types]]
  haskell-name = 'Test.QuickCheck.Property'
  coq-name     = 'Property'
  arity        = 0
  cons-names   = []

##############################################################################
# Functions                                                                  #
##############################################################################

[[functions]]
  haskell-type    = 'Prelude.Bool -> Test.QuickCheck.Property'
  haskell-name    = 'Test.QuickCheck.property'
  coq-name        = 'boolProp'
  arity           = 1
  partial         = false
  needs-free-args = true

##############################################################################
# Operators                                                                  #
##############################################################################

[[functions]]
  haskell-type    = 'Prelude.Bool -> Test.QuickCheck.Property -> Test.QuickCheck.Property'
  haskell-name    = 'Test.QuickCheck.(==>)'
  coq-name        = 'preProp'
  arity           = 2
  partial         = false
  needs-free-args = true

[[functions]]
  haskell-type    = 'a -> a -> Test.QuickCheck.Property'
  haskell-name    = 'Test.QuickCheck.(===)'
  coq-name        = 'eqProp'
  arity           = 2
  partial         = false
  needs-free-args = true

[[functions]]
  haskell-type    = 'a -> a -> Test.QuickCheck.Property'
  haskell-name    = 'Test.QuickCheck.(=/=)'
  coq-name        = 'neqProp'
  arity           = 2
  partial         = false
  needs-free-args = true

[[functions]]
  haskell-type    = 'Test.QuickCheck.Property -> Test.QuickCheck.Property -> Test.QuickCheck.Property'
  haskell-name    = 'Test.QuickCheck.(.&&.)'
  coq-name        = 'conjProp'
  arity           = 2
  partial         = false
  needs-free-args = true

[[functions]]
  haskell-type    = 'Test.QuickCheck.Property -> Test.QuickCheck.Property -> Test.QuickCheck.Property'
  haskell-name    = 'Test.QuickCheck.(.||.)'
  coq-name        = 'disjProp'
  arity           = 2
  partial         = false
  needs-free-args = true

##############################################################################
# Imported from `Prelude`                                                    #
##############################################################################

[[types]]
  haskell-name = 'Prelude.Bool'
  coq-name     = 'Bool'
  arity        = 0
  cons-names   = [
      'Prelude.True',
      'Prelude.False',
    ]
